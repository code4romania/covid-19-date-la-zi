on:
  pull_request:
    branches:
      - develop

name: CI

env:
  IMAGE_PARSER: ${{ secrets.DOCKER_HUB_ORGANIZATION }}/datelazi-parser
  IMAGE_API: ${{ secrets.DOCKER_HUB_ORGANIZATION }}/datelazi-api
  IMAGE_FRONTEND: ${{ secrets.DOCKER_HUB_ORGANIZATION }}/datelazi-frontend
  TF_WORKSPACE: "staging"
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

jobs:
  build-parser:
    name: Build Parser container
    runs-on: ubuntu-latest

    steps:
      - name: Checkoout
        uses: actions/checkout@v1

      - name: Build Docker image
        run: |
          cd backend
          docker build . \
            --tag $IMAGE_PARSER:$GITHUB_SHA \
            --file Dockerfile-parser

  build-api:
    name: Build API container
    runs-on: ubuntu-latest

    steps:
      - name: Checkoout
        uses: actions/checkout@v1

      - name: Build Docker image
        run: |
          cd backend
          docker build . \
            --tag $IMAGE_API:$GITHUB_SHA \
            --file Dockerfile-api

  build-frontend:
    name: Build FrontEnd container
    runs-on: ubuntu-latest

    steps:
      - name: Checkoout
        uses: actions/checkout@v1

      - name: Build Docker image
        run: |
          cd frontend
          docker build . \
            --tag $IMAGE_FRONTEND:$GITHUB_SHA

  check-infra:
    name: Test Infrastructure
    runs-on: ubuntu-latest
    needs: [build-parser, build-api, build-frontend]

    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: "Prep TF Vars"
        run: |
          cat << EOF > aws_deploy/github.tfvars
          IMAGE_FRONTEND = "$IMAGE_FRONTEND:$GITHUB_SHA"
          IMAGE_API      = "$IMAGE_API:$GITHUB_SHA"
          IMAGE_PARSER   = "$IMAGE_PARSER:$GITHUB_SHA"
          EOF
          cat aws_deploy/github.tfvars

      - name: "Terraform Format"
        uses: hashicorp/terraform-github-actions@master
        env:
          GITHUB_TOKEN: ${{ secrets.TERRAFORM_PR_GITHUB_TOKEN }}
        with:
          tf_actions_version: 0.12.23
          tf_actions_subcommand: "fmt"
          tf_actions_working_dir: "aws_deploy"
          tf_actions_comment: true
      - name: "Terraform Init"
        uses: hashicorp/terraform-github-actions@master
        env:
          GITHUB_TOKEN: ${{ secrets.TERRAFORM_PR_GITHUB_TOKEN }}
        with:
          tf_actions_version: 0.12.23
          tf_actions_subcommand: "init"
          tf_actions_working_dir: "aws_deploy"
          tf_actions_comment: true
      - name: "Terraform Validate"
        uses: hashicorp/terraform-github-actions@master
        env:
          GITHUB_TOKEN: ${{ secrets.TERRAFORM_PR_GITHUB_TOKEN }}
        with:
          tf_actions_version: 0.12.23
          tf_actions_subcommand: "validate"
          tf_actions_working_dir: "aws_deploy"
          tf_actions_comment: true
      - name: "Terraform Plan"
        uses: hashicorp/terraform-github-actions@master
        env:
          GITHUB_TOKEN: ${{ secrets.TERRAFORM_PR_GITHUB_TOKEN }}
        with:
          tf_actions_version: 0.12.23
          tf_actions_subcommand: "plan"
          tf_actions_working_dir: "aws_deploy"
          tf_actions_comment: true
          args: "--var-file github.tfvars"
